{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Documents\\\\GitHub\\\\CMPS4910-Senior-Project\\\\contact-tracing-app\\\\screens\\\\userInfoScreen.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport styles from \"./styles/testScreen.style.js\";\nimport { retrieveUnsecured } from \"../components/tokenAsync\";\n\nvar UserInfoTab = function UserInfoTab() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var id = {};\n  useEffect(function () {\n    retrieveUnsecured('id').then(function (resultID) {\n      id = parseInt(resultID);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    retrieveUnsecured('token').then(function (result) {\n      console.log(\"Retrieving: \", result);\n      console.log(\"id is\", id);\n      fetch('http://localhost:3000/api/user/user', {\n        method: 'POST',\n        headers: {\n          'Authorization': \"Bearer \" + result,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(571)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        console.log('JSON here we go babey: ');\n        console.log(json);\n        setData(json);\n      }).catch(function (error) {\n        console.error(error);\n      }).finally(function () {\n        return setLoading(false);\n      });\n    }).catch(function (error) {\n      console.log(\"Error in promise object retrieveTokenAsync():::\", error);\n    });\n  }, []);\n  return console.log(data), React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"User Info Placeholder\"), isLoading ? React.createElement(ActivityIndicator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 26\n    }\n  }) : React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, \"Device ID: \", data.device_id), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, \"User Type: \", data.user_type), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \"Email: \", data.email), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, \"Password: \", data.passwrd)));\n};\n\nexport default UserInfoTab;","map":{"version":3,"sources":["D:/Documents/GitHub/CMPS4910-Senior-Project/contact-tracing-app/screens/userInfoScreen.js"],"names":["React","useState","useEffect","styles","retrieveUnsecured","UserInfoTab","isLoading","setLoading","data","setData","id","then","resultID","parseInt","catch","error","console","log","result","fetch","method","headers","body","JSON","stringify","response","json","finally","flex","justifyContent","alignItems","device_id","user_type","email","passwrd"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Text,\r\n    View,\r\n    StyleSheet,\r\n    TextInput,\r\n    ImageBackground,\r\n    TouchableOpacity,\r\n    Image,\r\n    ActivityIndicator\r\n} from 'react-native';\r\nimport styles from './styles/testScreen.style.js';\r\nimport {retrieveUnsecured} from '../components/tokenAsync';\r\nconst UserInfoTab = () => {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [data, setData] = useState([]);\r\n    let id = {}\r\n    useEffect(() => {\r\n        retrieveUnsecured('id')\r\n        .then(resultID => {\r\n            id = parseInt(resultID);\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n        \r\n        retrieveUnsecured('token')\r\n            .then(result => {\r\n                console.log(\"Retrieving: \", result);\r\n                console.log(\"id is\", id);\r\n                fetch('http://localhost:3000/api/user/user', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Authorization': `Bearer ${result}`,\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n\r\n                    body: JSON.stringify(571)\r\n\r\n                })\r\n                    .then((response) => response.json())\r\n                    .then((json) => {\r\n                        console.log('JSON here we go babey: ');\r\n                        console.log(json);\r\n                        setData(json);\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(error)\r\n                    })\r\n                    .finally(() => setLoading(false));\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Error in promise object retrieveTokenAsync():::\", error);\r\n            });\r\n            \r\n        /* Uncomment this code if testing on Web \r\n\r\n        fetch('http://localhost:3000/api/user/user', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': `Bearer ${accessToken}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n\r\n            body: JSON.stringify(id)\r\n\r\n        })\r\n            .then((response) => response.json())\r\n            .then((json) => {\r\n                console.log('JSON here we go babey: ');\r\n                console.log(json);\r\n                setData(json);\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n            .finally(() => setLoading(false));\r\n         */\r\n\r\n    }, []);\r\n\r\n    return (\r\n        console.log(data),\r\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n            <Text >\r\n                User Info Placeholder\r\n            </Text>\r\n            {isLoading ? <ActivityIndicator /> : (\r\n                <View>\r\n\r\n                    <Text>Device ID: {data.device_id}</Text>\r\n                    <Text>User Type: {data.user_type}</Text>\r\n                    <Text>Email: {data.email}</Text>\r\n                    <Text>Password: {data.passwrd}</Text>\r\n                </View>\r\n\r\n            )}\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\nexport default UserInfoTab;"]},"metadata":{},"sourceType":"module"}