{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\Documents\\\\GitHub\\\\CMPS4910-Senior-Project\\\\contact-tracing-app\\\\navigation\\\\stackNavigator.js\";\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport SignedInNavigator from \"./tabNavigator\";\nimport LoginScreen from \"../screens/loginScreen\";\nimport LoadingScreen from \"../screens/loadingScreen\";\nvar AuthContext = React.createContext();\nvar Stack = createStackNavigator();\n\nvar Navigation = function Navigation() {\n  return React.createElement(AuthContext.Provider, {\n    value: authContext,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, React.createElement(Stack.Navigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, state.isLoading ? React.createElement(Stack.Screen, {\n    name: \"LoadingScreen\",\n    component: LoadingScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 29\n    }\n  }) : state.userToken == null ? React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: LoginScreen(AuthContext),\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 29\n    }\n  }) : React.createElement(Stack.Screen, {\n    name: \"SignedIn\",\n    component: SignedInNavigator,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 37\n    }\n  }))));\n};\n\nexport default Navigation;","map":{"version":3,"sources":["D:/Documents/GitHub/CMPS4910-Senior-Project/contact-tracing-app/navigation/stackNavigator.js"],"names":["NavigationContainer","createStackNavigator","React","SignedInNavigator","LoginScreen","LoadingScreen","AuthContext","createContext","Stack","Navigation","authContext","state","isLoading","userToken","headerShown"],"mappings":";;;AAAA,SAASA,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,iBAAP;AAEA,OAAOC,WAAP;AACA,OAAOC,aAAP;AAEA,IAAMC,WAAW,GAAGJ,KAAK,CAACK,aAAN,EAApB;AACA,IAAMC,KAAK,GAAGP,oBAAoB,EAAlC;;AACA,IAAMQ,UAAU,GAAG,SAAbA,UAAa,GAAM;AAGrB,SACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQC,KAAK,CAACC,SAAN,GACI,oBAAC,KAAD,CAAO,MAAP;AACI,IAAA,IAAI,EAAC,eADT;AAEI,IAAA,SAAS,EAAEP,aAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,GAKIM,KAAK,CAACE,SAAN,IAAmB,IAAnB,GAEA,oBAAC,KAAD,CAAO,MAAP;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,SAAS,EAAET,WAAW,CAACE,WAAD,CAF1B;AAGI,IAAA,OAAO,EAAE;AACLQ,MAAAA,WAAW,EAAE;AADR,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,GAUQ,oBAAC,KAAD,CAAO,MAAP;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,SAAS,EAAEX,iBAFf;AAGI,IAAA,OAAO,EAAE;AACLW,MAAAA,WAAW,EAAE;AADR,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBpB,CADJ,CADJ,CADJ;AAkCH,CArCD;;AAwCA,eAAeL,UAAf","sourcesContent":["import { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport * as React from 'react';\r\nimport SignedInNavigator from './tabNavigator';\r\n\r\nimport LoginScreen from '../screens/loginScreen';\r\nimport LoadingScreen from '../screens/loadingScreen';\r\n\r\nconst AuthContext = React.createContext();\r\nconst Stack = createStackNavigator();\r\nconst Navigation = () => {\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider value={authContext}>\r\n            <NavigationContainer>\r\n                <Stack.Navigator>\r\n                    {\r\n                        state.isLoading ? (\r\n                            <Stack.Screen\r\n                                name=\"LoadingScreen\"\r\n                                component={LoadingScreen}\r\n                            />\r\n                        ) : state.userToken == null ? (\r\n                            // No authenticated token\r\n                            <Stack.Screen\r\n                                name=\"Login\"\r\n                                component={LoginScreen(AuthContext)}\r\n                                options={{\r\n                                    headerShown: false\r\n                                }}\r\n                            />\r\n                        ) : (\r\n                                    <Stack.Screen\r\n                                        name=\"SignedIn\"\r\n                                        component={SignedInNavigator}\r\n                                        options={{\r\n                                            headerShown: false\r\n                                        }}\r\n                                    />\r\n                                )\r\n                    }\r\n                </Stack.Navigator>\r\n            </NavigationContainer>\r\n        </AuthContext.Provider>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Navigation;"]},"metadata":{},"sourceType":"module"}