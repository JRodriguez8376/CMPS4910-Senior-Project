{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as SecureStore from 'expo-secure-store';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar token = {};\n\nvar saveTokenAsync = function saveTokenAsync(accessToken) {\n  return _regeneratorRuntime.async(function saveTokenAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(SecureStore.setItemAsync('token', accessToken));\n\n        case 3:\n          _context.next = 8;\n          break;\n\n        case 5:\n          _context.prev = 5;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(\"Error in saving Access Token: \", _context.t0);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n};\n\nvar retrieveTokenAsync = function retrieveTokenAsync() {\n  return _regeneratorRuntime.async(function retrieveTokenAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          return _context2.abrupt(\"return\", SecureStore.getItemAsync('token'));\n\n        case 4:\n          _context2.prev = 4;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(\"Error in retrieving Access Token\");\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 4]], Promise);\n};\n\nvar saveUnsecured = function saveUnsecured(key, value) {\n  return _regeneratorRuntime.async(function saveUnsecured$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          console.log(\"Saving:\" + key + \" : \" + value);\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, value));\n\n        case 4:\n          _context3.next = 9;\n          break;\n\n        case 6:\n          _context3.prev = 6;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(\"Error in saving Access Token: \", _context3.t0);\n\n        case 9:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\n\nvar retrieveUnsecured = function retrieveUnsecured(key) {\n  return _regeneratorRuntime.async(function retrieveUnsecured$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n        case 3:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 6:\n          _context4.prev = 6;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(\"Error in retrieving Access Token\");\n\n        case 9:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\n\nexport { saveTokenAsync, retrieveTokenAsync, saveUnsecured, retrieveUnsecured };","map":{"version":3,"sources":["C:/Users/avalencia17/Documents/GitHub/CMPS4910-Senior-Project/contact-tracing-app/components/tokenAsync.js"],"names":["SecureStore","AsyncStorage","token","saveTokenAsync","accessToken","setItemAsync","console","log","retrieveTokenAsync","getItemAsync","saveUnsecured","key","value","setItem","retrieveUnsecured","getItem"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,mBAA7B;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,IAAIC,KAAK,GAAG,EAAZ;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAOC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAETJ,WAAW,CAACK,YAAZ,CACF,OADE,EAEFD,WAFE,CAFS;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOfE,UAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;;AAPe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAWA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAGfR,WAAW,CAACS,YAAZ,CAAyB,OAAzB,CAHe;;AAAA;AAAA;AAAA;AAMnBH,UAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;;AANmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AASA,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAAOC,GAAP,EAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAEdN,UAAAA,OAAO,CAACC,GAAR,aAAsBI,GAAtB,WAA+BC,KAA/B;AAFc;AAAA,2CAGRX,YAAY,CAACY,OAAb,CACFF,GADE,EAEFC,KAFE,CAHQ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQdN,UAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;;AARc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;;AAYA,IAAMO,iBAAiB,GAAG,SAApBA,iBAAoB,CAAOH,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAELV,YAAY,CAACc,OAAb,CAAqBJ,GAArB,CAFK;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMlBL,UAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;;AANkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AASA,SACIJ,cADJ,EAEIK,kBAFJ,EAGIE,aAHJ,EAIII,iBAJJ","sourcesContent":["import * as SecureStore from 'expo-secure-store';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nlet token = {}\r\nconst saveTokenAsync = async (accessToken) => {\r\n    try {\r\n        await SecureStore.setItemAsync(\r\n            'token',\r\n            accessToken\r\n        );\r\n    } catch (error) {\r\n        console.log(\"Error in saving Access Token: \", error);\r\n    }\r\n}\r\n\r\nconst retrieveTokenAsync = async () => {\r\n    try {\r\n        return (\r\n            SecureStore.getItemAsync('token')\r\n        );\r\n    } catch (error) {\r\n        console.log(\"Error in retrieving Access Token\");\r\n    }\r\n}\r\nconst saveUnsecured = async (key, value) => {\r\n    try {\r\n        console.log(`Saving:${key} : ${value}`);\r\n        await AsyncStorage.setItem(\r\n            key,\r\n            value\r\n        );\r\n    } catch (error) {\r\n        console.log(\"Error in saving Access Token: \", error);\r\n    }\r\n}\r\n\r\nconst retrieveUnsecured = async (key) => {\r\n    try {\r\n        return(await AsyncStorage.getItem(key)\r\n        );\r\n\r\n    } catch (error) {\r\n        console.log(\"Error in retrieving Access Token\");\r\n    }\r\n}\r\nexport {\r\n    saveTokenAsync,\r\n    retrieveTokenAsync,\r\n    saveUnsecured,\r\n    retrieveUnsecured\r\n};"]},"metadata":{},"sourceType":"module"}