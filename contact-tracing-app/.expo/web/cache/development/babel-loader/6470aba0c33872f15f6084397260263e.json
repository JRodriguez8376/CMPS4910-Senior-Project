{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Documents\\\\GitHub\\\\CMPS4910-Senior-Project\\\\contact-tracing-app\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport 'react-native-gesture-handler';\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { FlatList, State } from 'react-native-gesture-handler';\nvar AuthContext = React.createContext();\n\nvar LoadingScreen = function LoadingScreen() {\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \" This is a loading screen\"));\n};\n\nvar savedID = 0;\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      id = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _React$useContext = React.useContext(AuthContext),\n      signIn = _React$useContext.signIn;\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.formContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"./assets/images/testIllya.jpg\"),\n    style: styles.logo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.formElement,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.paragraph,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \" Email\")), React.createElement(View, {\n    style: styles.formElement,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.inputView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"johndoe@gmail.com\",\n    placeholderTextColor: \"gray\",\n    value: id,\n    onChangeText: setEmail,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }))), React.createElement(View, {\n    style: styles.formElement,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.paragraph,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \" Password\")), React.createElement(View, {\n    style: styles.formElement,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.inputView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Password\",\n    placeholderTextColor: \"gray\",\n    secureTextEntry: true,\n    value: password,\n    onChangeText: setPassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }))), React.createElement(View, {\n    style: styles.formElement,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.loginButton,\n    onPress: function onPress() {\n      return signIn({\n        id: id,\n        password: password\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, \" Login \")))));\n};\n\nvar HotspotScreen = function HotspotScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Hotspot Map Placeholder\"));\n};\n\nvar TestScreen = function TestScreen() {\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      data = _useState8[0],\n      setData = _useState8[1];\n\n  useEffect(function () {\n    fetch('http://localhost:3000/users').then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      console.log('JSON here we go babey: ');\n      console.log(json);\n      setData(json);\n    }).catch(function (error) {\n      console.error(error);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, \"Test Placeholder\"), isLoading ? React.createElement(ActivityIndicator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 26\n    }\n  }) : React.createElement(FlatList, {\n    data: data,\n    keyExtractor: function keyExtractor(_ref2, index) {\n      var device_id = _ref2.device_id;\n      return device_id;\n    },\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }\n      }, \"User ID: \", item.device_id, \", Device Type: \", item.user_type);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }));\n};\n\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\n\nvar UserInfoTab = function UserInfoTab() {\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isLoading = _useState10[0],\n      setLoading = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      data = _useState12[0],\n      setData = _useState12[1];\n\n  useEffect(function () {\n    fetch('http://localhost:3000/auth/userInfo/user', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      console.log('JSON here we go babey: ');\n      console.log(json);\n      setData(json);\n    }).catch(function (error) {\n      console.error(error);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, \"User Info Placeholder\"), isLoading ? React.createElement(ActivityIndicator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 26\n    }\n  }) : React.createElement(FlatList, {\n    data: data,\n    keyExtractor: function keyExtractor(_ref4, index) {\n      var device_id = _ref4.device_id;\n      return device_id;\n    },\n    renderItem: function renderItem(_ref5) {\n      var item = _ref5.item;\n      return React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }\n      }, \"User ID: \", item.device_id, \", Device Type: \", item.user_type);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }));\n};\n\nvar App = function App(_ref6) {\n  var navigation = _ref6.navigation;\n\n  var _React$useReducer = React.useReducer(function (prevState, action) {\n    switch (action.type) {\n      case 'RESTORE_TOKEN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'SIGN_IN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          isSignout: false,\n          userToken: action.token\n        });\n\n      case 'SIGN_OUT':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          isSignout: true,\n          userToken: null\n        });\n    }\n  }, {\n    isLoading: true,\n    isSignout: false,\n    userToken: null\n  }),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  React.useEffect(function () {\n    var bootstrapAsync = function bootstrapAsync() {\n      var userToken;\n      return _regeneratorRuntime.async(function bootstrapAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('userToken'));\n\n            case 3:\n              userToken = _context.sent;\n              _context.next = 8;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 8:\n              dispatch({\n                type: 'RESTORE_TOKEN',\n                token: userToken\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]], Promise);\n    };\n\n    bootstrapAsync();\n  }, []);\n  var authContext = React.useMemo(function () {\n    return {\n      signIn: function signIn(data) {\n        return _regeneratorRuntime.async(function signIn$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                fetch('http://localhost:3000/auth/login', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(data)\n                }).then(function (response) {\n                  return response.json();\n                }).then(function (data) {\n                  console.log(\"Success: \", data);\n                }).catch(function (error) {\n                  console.error('Error: ', error);\n                });\n                dispatch({\n                  type: 'SIGN_IN',\n                  token: 'dummy-auth-token'\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      signOut: function signOut() {\n        return dispatch({\n          type: 'SIGN_OUT'\n        });\n      },\n      signUp: function signUp(data) {\n        return _regeneratorRuntime.async(function signUp$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                dispatch({\n                  type: 'SIGN_IN',\n                  token: 'dummy-auth-token'\n                });\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n    };\n  }, []);\n  return React.createElement(AuthContext.Provider, {\n    value: authContext,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  }, React.createElement(Stack.Navigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }\n  }, state.isLoading ? React.createElement(Stack.Screen, {\n    name: \"LoadingScreen\",\n    component: LoadingScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 29\n    }\n  }) : state.userToken == null ? React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: LoginScreen,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 29\n    }\n  }) : React.createElement(Stack.Screen, {\n    name: \"SignedIn\",\n    component: SignedInNavigator,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 37\n    }\n  }))));\n};\n\nvar SignedInNavigator = function SignedInNavigator() {\n  return React.createElement(Tab.Navigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Hotspot\",\n    component: HotspotScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Test tab\",\n    component: TestScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"User info Test tab\",\n    component: UserInfoTab,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default App;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    flexDirection: 'column',\n    backgroundColor: 'white',\n    alignItems: 'stretch'\n  },\n  formContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    flexDirection: 'column',\n    paddingBottom: 100,\n    alignItems: 'stretch'\n  },\n  formElement: {\n    paddingLeft: 40,\n    paddingRight: 40,\n    paddingTop: 20,\n    paddingBottom: 20\n  },\n  backgroundImage: {\n    flex: 1,\n    resizeMode: 'cover',\n    justifyContent: 'center'\n  },\n  inputView: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'stretch'\n  },\n  input: {\n    fontSize: 24,\n    borderBottomWidth: 1,\n    borderColor: 'gray'\n  },\n  loginButton: {\n    borderRadius: 25,\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 30,\n    marginBottom: 30,\n    backgroundColor: 'blue'\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 30\n  },\n  titles: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    justifyContent: 'center'\n  },\n  paragraph: {\n    fontSize: 18,\n    color: 'white',\n    textAlign: 'left',\n    justifyContent: 'center'\n  },\n  logo: {\n    width: 100,\n    height: 100,\n    resizeMode: 'contain',\n    alignSelf: 'center',\n    margin: 100\n  }\n});","map":{"version":3,"sources":["D:/Documents/GitHub/CMPS4910-Senior-Project/contact-tracing-app/App.js"],"names":["React","useState","useEffect","AsyncStorage","NavigationContainer","createStackNavigator","createBottomTabNavigator","FlatList","State","AuthContext","createContext","LoadingScreen","savedID","LoginScreen","navigation","id","setEmail","password","setPassword","useContext","signIn","styles","container","formContainer","require","logo","formElement","paragraph","inputView","input","loginButton","buttonText","HotspotScreen","flex","justifyContent","alignItems","TestScreen","isLoading","setLoading","data","setData","fetch","then","response","json","console","log","catch","error","finally","index","device_id","item","user_type","Tab","Stack","UserInfoTab","method","headers","body","JSON","stringify","App","useReducer","prevState","action","type","userToken","token","isSignout","state","dispatch","bootstrapAsync","getItem","authContext","useMemo","signOut","signUp","headerShown","SignedInNavigator","StyleSheet","create","flexDirection","backgroundColor","paddingBottom","paddingLeft","paddingRight","paddingTop","backgroundImage","resizeMode","fontSize","borderBottomWidth","borderColor","borderRadius","height","marginTop","marginBottom","color","titles","fontWeight","textAlign","width","alignSelf","margin"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n    Text,\r\n    View,\r\n    StyleSheet,\r\n    TextInput,\r\n    ImageBackground,\r\n    TouchableOpacity,\r\n    Image,\r\n    ActivityIndicator\r\n} from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport {\r\n    NavigationContainer,\r\n\r\n} from '@react-navigation/native';\r\nimport {\r\n    createStackNavigator\r\n} from '@react-navigation/stack';\r\nimport {\r\n    createBottomTabNavigator\r\n} from '@react-navigation/bottom-tabs';\r\n\r\nimport { FlatList, State } from 'react-native-gesture-handler';\r\nconst AuthContext = React.createContext();\r\nconst LoadingScreen = () => {\r\n    return (\r\n        <View>\r\n            <Text> This is a loading screen</Text>\r\n        </View>\r\n    );\r\n}\r\nconst savedID = 0;\r\nconst LoginScreen = ({ navigation }) => {\r\n    const [id, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const { signIn } = React.useContext(AuthContext);\r\n    return (\r\n\r\n        <View style={styles.container}>\r\n            {/*<ImageBackground source={require(\"./assets/images/backgroundLogin.jpg\")} style={styles.backgroundImage}>*/}\r\n            <View style={styles.formContainer}>\r\n                <Image source={require(\"./assets/images/testIllya.jpg\")} style={styles.logo} />\r\n                <View style={styles.formElement}>\r\n                    <Text style={styles.paragraph}> Email</Text>\r\n                </View>\r\n                <View style={styles.formElement}>\r\n                    <View style={styles.inputView}>\r\n                        <TextInput style={styles.input}\r\n                            placeholder=\"johndoe@gmail.com\"\r\n                            placeholderTextColor='gray'\r\n                            value={id}\r\n                            onChangeText={setEmail}\r\n                        />\r\n                    </View>\r\n                </View>\r\n                <View style={styles.formElement}>\r\n                    <Text style={styles.paragraph}> Password</Text>\r\n                </View>\r\n                <View style={styles.formElement}>\r\n                    <View style={styles.inputView}>\r\n                        <TextInput style={styles.input}\r\n                            placeholder=\"Password\"\r\n                            placeholderTextColor='gray'\r\n                            secureTextEntry={true}\r\n                            value={password}\r\n                            onChangeText={setPassword}\r\n                        />\r\n                    </View>\r\n                </View>\r\n                <View style={styles.formElement}>\r\n                    <TouchableOpacity style={styles.loginButton}\r\n                        onPress={() => signIn({ id, password })}\r\n                    >\r\n                        <Text style={styles.buttonText}> Login </Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n            {/*</ ImageBackground> */}\r\n        </View>\r\n\r\n    );\r\n}\r\nconst HotspotScreen = () => {\r\n    return (\r\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n            <Text >\r\n                Hotspot Map Placeholder\r\n            </Text>\r\n        </View>\r\n\r\n    );\r\n\r\n}\r\n//Fetch Requests\r\n// Example code from: https://reactnative.dev/docs/network\r\n//Just testing fetching data from my Node server\r\nconst TestScreen = () => {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [data, setData] = useState([]);\r\n    useEffect(() => {\r\n        fetch('http://localhost:3000/users')\r\n            .then((response) => response.json())\r\n            .then((json) => {\r\n                console.log('JSON here we go babey: ');\r\n                console.log(json);\r\n                setData(json);\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n            .finally(() => setLoading(false));\r\n    }, []);\r\n\r\n    return (\r\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n            <Text >\r\n                Test Placeholder\r\n            </Text>\r\n            {isLoading ? <ActivityIndicator /> : (\r\n                <FlatList\r\n                    data={data}\r\n                    keyExtractor={({ device_id }, index) => device_id}\r\n                    renderItem={({ item }) => (\r\n                        <Text>User ID: {item.device_id}, Device Type: {item.user_type}</Text>\r\n                    )}\r\n                />\r\n            )}\r\n        </View>\r\n\r\n    );\r\n\r\n}\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst Stack = createStackNavigator();\r\n\r\nconst UserInfoTab = () => {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [data, setData] = useState([]);\r\n    useEffect(() => {\r\n        fetch('http://localhost:3000/auth/userInfo/user', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data),\r\n            })\r\n            .then((response) => response.json())\r\n            .then((json) => {\r\n                console.log('JSON here we go babey: ');\r\n                console.log(json);\r\n                setData(json);\r\n            })\r\n            .catch((error) => {\r\n                console.error(error)\r\n            })\r\n            .finally(() => setLoading(false));\r\n    }, []);\r\n\r\n    return (\r\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n            <Text >\r\n                User Info Placeholder\r\n            </Text>\r\n            {isLoading ? <ActivityIndicator /> : (\r\n                <FlatList\r\n                    data={data}\r\n                    keyExtractor={({ device_id }, index) => device_id}\r\n                    renderItem={({ item }) => (\r\n                        <Text>User ID: {item.device_id}, Device Type: {item.user_type}</Text>\r\n                    )}\r\n                />\r\n            )}\r\n        </View>\r\n\r\n    );\r\n}\r\n/*\r\nhttps://reactnavigation.org/docs/auth-flow/\r\nModified(And will expand upon to suit our needs) code from the documents on React Navigation\r\nto use in this project below\r\n*/\r\n\r\nconst App = ({ navigation }) => {\r\n    const [state, dispatch] = React.useReducer(\r\n        (prevState, action) => {\r\n            switch (action.type) {\r\n                case 'RESTORE_TOKEN':\r\n                    return {\r\n                        ...prevState,\r\n                        userToken: action.token,\r\n                        isLoading: false,\r\n                    };\r\n                case 'SIGN_IN':\r\n                    return {\r\n                        ...prevState,\r\n                        isSignout: false,\r\n                        userToken: action.token,\r\n                    };\r\n                case 'SIGN_OUT':\r\n                    return {\r\n                        ...prevState,\r\n                        isSignout: true,\r\n                        userToken: null,\r\n                    };\r\n            }\r\n        },\r\n        {\r\n            isLoading: true,\r\n            isSignout: false,\r\n            userToken: null,\r\n        }\r\n    );\r\n    React.useEffect(() => {\r\n        const bootstrapAsync = async () => {\r\n            let userToken;\r\n            try {\r\n                userToken = await AsyncStorage.getItem('userToken');\r\n\r\n            } catch (e) {\r\n                //restore failed token later once I know what I am doing fully\r\n            }\r\n            //Validate token here\r\n            dispatch({ type: 'RESTORE_TOKEN', token: userToken });\r\n        };\r\n        bootstrapAsync();\r\n    }, []);\r\n    const authContext = React.useMemo(\r\n        () => ({\r\n            signIn: async data => {\r\n                //send sign in data here\r\n                fetch('http://localhost:3000/auth/login', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(data),\r\n                })\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        console.log(\"Success: \", data);\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error: ', error);\r\n                    });\r\n                dispatch({ type: 'SIGN_IN', token: 'dummy-auth-token' });\r\n            },\r\n            signOut: () => dispatch({ type: 'SIGN_OUT' }),\r\n            signUp: async data => {\r\n                dispatch({ type: 'SIGN_IN', token: 'dummy-auth-token' });\r\n            },\r\n        }),\r\n        []\r\n    );\r\n\r\n    return (\r\n\r\n        <AuthContext.Provider value={authContext}>\r\n            <NavigationContainer>\r\n\r\n\r\n                <Stack.Navigator>\r\n                    {\r\n                        state.isLoading ? (\r\n                            <Stack.Screen\r\n                                name=\"LoadingScreen\"\r\n                                component={LoadingScreen}\r\n                            />\r\n                        ) : state.userToken == null ? (\r\n                            // No authenticated token\r\n                            <Stack.Screen\r\n                                name=\"Login\"\r\n                                component={LoginScreen}\r\n                                options={{\r\n                                    headerShown: false\r\n                                }}\r\n                            />\r\n                        ) : (\r\n                                    <Stack.Screen\r\n                                        name=\"SignedIn\"\r\n                                        component={SignedInNavigator}\r\n                                        options={{\r\n                                            headerShown: false\r\n                                        }}\r\n                                    />\r\n                                )\r\n                    }\r\n                </Stack.Navigator>\r\n            </NavigationContainer>\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n// Thanks to: \r\n// https://stackoverflow.com/questions/61025437/how-to-combine-stacknavigator-and-tabnavigator-in-react-navigation-5\r\n// For helping me with Tab Navigation that is nested inside a \r\n// Stack Navigation for Auth flow, see the StackNavigator to see the \r\n// SignedInNavigator Object passed in\r\nconst SignedInNavigator = () => {\r\n    return (\r\n        <Tab.Navigator>\r\n            <Tab.Screen\r\n                name=\"Hotspot\"\r\n                component={HotspotScreen}\r\n            />\r\n            <Tab.Screen\r\n                name=\"Test tab\"\r\n                component={TestScreen}\r\n            />\r\n            <Tab.Screen\r\n                name=\"User info Test tab\"\r\n                component={UserInfoTab}\r\n            />\r\n        </Tab.Navigator>\r\n    )\r\n}\r\n\r\nexport default App;\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n        backgroundColor: 'white',\r\n        alignItems: 'stretch'\r\n    },\r\n    formContainer: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n        paddingBottom: 100,\r\n        alignItems: 'stretch'\r\n    },\r\n    formElement: {\r\n        paddingLeft: 40,\r\n        paddingRight: 40,\r\n        paddingTop: 20,\r\n        paddingBottom: 20\r\n    },\r\n    backgroundImage: {\r\n        flex: 1,\r\n        resizeMode: 'cover',\r\n        justifyContent: 'center',\r\n    },\r\n    inputView: {\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'stretch',\r\n    },\r\n    input: {\r\n        fontSize: 24,\r\n        borderBottomWidth: 1,\r\n        borderColor: 'gray',\r\n\r\n    },\r\n    loginButton: {\r\n        borderRadius: 25,\r\n        height: 50,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginTop: 30,\r\n        marginBottom: 30,\r\n        backgroundColor: 'blue',\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n\r\n        fontSize: 30,\r\n    },\r\n    titles: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paragraph: {\r\n\r\n        fontSize: 18,\r\n        color: 'white',\r\n        textAlign: 'left',\r\n        justifyContent: 'center',\r\n    },\r\n\r\n    logo: {\r\n        width: 100,\r\n        height: 100,\r\n        resizeMode: 'contain',\r\n        alignSelf: 'center',\r\n        margin: 100\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}