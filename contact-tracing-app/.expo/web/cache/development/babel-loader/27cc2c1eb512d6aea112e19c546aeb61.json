{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from 'react';\nvar authContext = React.useMemo(function () {\n  return {\n    signIn: function signIn(data) {\n      return _regeneratorRuntime.async(function signIn$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              savedID = data.id;\n              fetch('http://localhost:3000/api/auth/login', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data)\n              }).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                saveTokenAsync(data.accessToken);\n                accessToken = data.accessToken;\n                console.log(\"Success: \", data);\n              }).catch(function (error) {\n                console.error('Error: ', error);\n              });\n              dispatch({\n                type: 'SIGN_IN',\n                token: accessToken\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    signOut: function signOut() {\n      return dispatch({\n        type: 'SIGN_OUT'\n      });\n    },\n    signUp: function signUp(data) {\n      return _regeneratorRuntime.async(function signUp$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch({\n                type: 'SIGN_IN',\n                token: 'dummy-auth-token'\n              });\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  };\n}, []);\nexport default authContext;","map":{"version":3,"sources":["D:/Documents/GitHub/CMPS4910-Senior-Project/contact-tracing-app/hooks/authContext.js"],"names":["React","authContext","useMemo","signIn","data","savedID","id","fetch","method","headers","body","JSON","stringify","then","response","json","saveTokenAsync","accessToken","console","log","catch","error","dispatch","type","token","signOut","signUp"],"mappings":";AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,IAAMC,WAAW,GAAGD,KAAK,CAACE,OAAN,CAChB;AAAA,SACI;AACIC,IAAAA,MAAM,EAAE,gBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAEJC,cAAAA,OAAO,GAAGD,IAAI,CAACE,EAAf;AAEAC,cAAAA,KAAK,CAAC,sCAAD,EAAyC;AAC1CC,gBAAAA,MAAM,EAAE,MADkC;AAE1CC,gBAAAA,OAAO,EAAE;AACL,kCAAgB;AADX,iBAFiC;AAK1CC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AALoC,eAAzC,CAAL,CAOKS,IAPL,CAOU,UAAAC,QAAQ;AAAA,uBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,eAPlB,EAQKF,IARL,CAQU,UAAAT,IAAI,EAAI;AACVY,gBAAAA,cAAc,CAACZ,IAAI,CAACa,WAAN,CAAd;AACAA,gBAAAA,WAAW,GAAGb,IAAI,CAACa,WAAnB;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBf,IAAzB;AAEH,eAbL,EAcKgB,KAdL,CAcW,UAACC,KAAD,EAAW;AACdH,gBAAAA,OAAO,CAACG,KAAR,CAAc,SAAd,EAAyBA,KAAzB;AACH,eAhBL;AAiBAC,cAAAA,QAAQ,CAAC;AAAEC,gBAAAA,IAAI,EAAE,SAAR;AAAmBC,gBAAAA,KAAK,EAAEP;AAA1B,eAAD,CAAR;;AArBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADZ;AAwBIQ,IAAAA,OAAO,EAAE;AAAA,aAAMH,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAd;AAAA,KAxBb;AAyBIG,IAAAA,MAAM,EAAE,gBAAMtB,IAAN;AAAA;AAAA;AAAA;AAAA;AACJkB,cAAAA,QAAQ,CAAC;AAAEC,gBAAAA,IAAI,EAAE,SAAR;AAAmBC,gBAAAA,KAAK,EAAE;AAA1B,eAAD,CAAR;;AADI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAzBZ,GADJ;AAAA,CADgB,EA+BhB,EA/BgB,CAApB;AAkCA,eAAevB,WAAf","sourcesContent":["\r\nimport * as React from 'react';\r\nconst authContext = React.useMemo(\r\n    () => (\r\n        {\r\n            signIn: async data => {\r\n                //send sign in data here\r\n                savedID = data.id\r\n\r\n                fetch('http://localhost:3000/api/auth/login', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(data),\r\n                })\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        saveTokenAsync(data.accessToken);\r\n                        accessToken = data.accessToken;\r\n                        console.log(\"Success: \", data);\r\n\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error('Error: ', error);\r\n                    });\r\n                dispatch({ type: 'SIGN_IN', token: accessToken });\r\n            },\r\n            signOut: () => dispatch({ type: 'SIGN_OUT' }),\r\n            signUp: async data => {\r\n                dispatch({ type: 'SIGN_IN', token: 'dummy-auth-token' });\r\n            },\r\n        }),\r\n    []\r\n);\r\n\r\nexport default authContext;"]},"metadata":{},"sourceType":"module"}