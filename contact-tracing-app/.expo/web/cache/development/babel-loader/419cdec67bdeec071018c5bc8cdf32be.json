{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Documents\\\\GitHub\\\\CMPS4910-Senior-Project\\\\contact-tracing-app\\\\screens\\\\loginScreen.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport styles from \"./styles/loginScreenStyle\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport tokenDispatch from \"../hooks/tokenDispatch\";\n\nvar LoginScreen = function LoginScreen() {\n  var AuthContext = React.createContext();\n  var authContext = React.useMemo(function () {\n    return {\n      signIn: function signIn(data) {\n        return _regeneratorRuntime.async(function signIn$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                savedID = data.id;\n                fetch('http://localhost:3000/api/auth/login', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify(data)\n                }).then(function (response) {\n                  return response.json();\n                }).then(function (data) {\n                  saveTokenAsync(data.accessToken);\n                  accessToken = data.accessToken;\n                  console.log(\"Success: \", data);\n                }).catch(function (error) {\n                  console.error('Error: ', error);\n                });\n                dispatch({\n                  type: 'SIGN_IN',\n                  token: accessToken\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      signOut: function signOut() {\n        return dispatch({\n          type: 'SIGN_OUT'\n        });\n      },\n      signUp: function signUp(data) {\n        return _regeneratorRuntime.async(function signUp$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                dispatch({\n                  type: 'SIGN_IN',\n                  token: 'dummy-auth-token'\n                });\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n    };\n  }, []);\n  tokenDispatch();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      id = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _React$useContext = React.useContext(AuthContext),\n      signIn = _React$useContext.signIn;\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.formContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/images/testIllya.jpg\"),\n    style: styles.logo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.formElement,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.paragraph,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \" Email\")), React.createElement(View, {\n    style: styles.formElement,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.inputView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"johndoe@gmail.com\",\n    placeholderTextColor: \"gray\",\n    value: id,\n    onChangeText: setEmail,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }))), React.createElement(View, {\n    style: styles.formElement,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.paragraph,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \" Password\")), React.createElement(View, {\n    style: styles.formElement,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.inputView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Password\",\n    placeholderTextColor: \"gray\",\n    secureTextEntry: true,\n    value: password,\n    onChangeText: setPassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }))), React.createElement(View, {\n    style: styles.formElement,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.loginButton,\n    onPress: function onPress() {\n      return signIn({\n        id: id,\n        password: password\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, \" Login \")))));\n};\n\nexport default LoginScreen;","map":{"version":3,"sources":["D:/Documents/GitHub/CMPS4910-Senior-Project/contact-tracing-app/screens/loginScreen.js"],"names":["React","useState","useEffect","styles","tokenDispatch","LoginScreen","AuthContext","createContext","authContext","useMemo","signIn","data","savedID","id","fetch","method","headers","body","JSON","stringify","then","response","json","saveTokenAsync","accessToken","console","log","catch","error","dispatch","type","token","signOut","signUp","setEmail","password","setPassword","useContext","container","formContainer","require","logo","formElement","paragraph","inputView","input","loginButton","buttonText"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styles from './styles/loginScreenStyle';\r\nimport {\r\n    Text,\r\n    View,\r\n    StyleSheet,\r\n    TextInput,\r\n    ImageBackground,\r\n    TouchableOpacity,\r\n    Image,\r\n    ActivityIndicator\r\n} from 'react-native';\r\nimport tokenDispatch from '../hooks/tokenDispatch';\r\n\r\n\r\nconst LoginScreen = () => {\r\n    \r\n    const AuthContext = React.createContext();\r\n    const authContext = React.useMemo(\r\n        () => (\r\n\r\n            {\r\n\r\n                signIn: async data => {\r\n                    //send sign in data here\r\n                    savedID = data.id\r\n\r\n                    fetch('http://localhost:3000/api/auth/login', {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        body: JSON.stringify(data),\r\n                    })\r\n                        .then(response => response.json())\r\n                        .then(data => {\r\n                            saveTokenAsync(data.accessToken);\r\n                            accessToken = data.accessToken;\r\n                            console.log(\"Success: \", data);\r\n\r\n                        })\r\n                        .catch((error) => {\r\n                            console.error('Error: ', error);\r\n                        });\r\n                    dispatch({ type: 'SIGN_IN', token: accessToken });\r\n                },\r\n                signOut: () => dispatch({ type: 'SIGN_OUT' }),\r\n                signUp: async data => {\r\n                    dispatch({ type: 'SIGN_IN', token: 'dummy-auth-token' });\r\n                },\r\n            }),\r\n        []\r\n    );\r\n    tokenDispatch();\r\n    const [id, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const { signIn } = React.useContext(AuthContext);\r\n    \r\n    return (\r\n        \r\n        <View style={styles.container}>\r\n            {/*<ImageBackground source={require(\"./assets/images/backgroundLogin.jpg\")} style={styles.backgroundImage}>*/}\r\n            <View style={styles.formContainer}>\r\n                <Image source={require(\"../assets/images/testIllya.jpg\")} style={styles.logo} />\r\n                <View style={styles.formElement}>\r\n                    <Text style={styles.paragraph}> Email</Text>\r\n                </View>\r\n                <View style={styles.formElement}>\r\n                    <View style={styles.inputView}>\r\n                        <TextInput style={styles.input}\r\n                            placeholder=\"johndoe@gmail.com\"\r\n                            placeholderTextColor='gray'\r\n                            value={id}\r\n                            onChangeText={setEmail}\r\n                        />\r\n                    </View>\r\n                </View>\r\n                <View style={styles.formElement}>\r\n                    <Text style={styles.paragraph}> Password</Text>\r\n                </View>\r\n                <View style={styles.formElement}>\r\n                    <View style={styles.inputView}>\r\n                        <TextInput style={styles.input}\r\n                            placeholder=\"Password\"\r\n                            placeholderTextColor='gray'\r\n                            secureTextEntry={true}\r\n                            value={password}\r\n                            onChangeText={setPassword}\r\n                        />\r\n                    </View>\r\n                </View>\r\n                <View style={styles.formElement}>\r\n                    <TouchableOpacity style={styles.loginButton}\r\n                        onPress={() => signIn({ id, password })}\r\n                    >\r\n                        <Text style={styles.buttonText}> Login </Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n            {/*</ ImageBackground> */}\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\nexport default LoginScreen;"]},"metadata":{},"sourceType":"module"}