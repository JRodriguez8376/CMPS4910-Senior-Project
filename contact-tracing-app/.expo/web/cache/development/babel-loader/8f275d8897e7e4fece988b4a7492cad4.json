{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\avalencia17\\\\Documents\\\\GitHub\\\\CMPS4910-Senior-Project\\\\contact-tracing-app\\\\screens\\\\testStartScreen.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport styles from \"./styles/testStartScreen.style.js\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { fetchTestData } from \"../api/helpers\";\nimport { FlatList, State } from 'react-native-gesture-handler';\nvar infoText = \"The following self-evaluation test will give you non-medical \" + \"opinion if you should go visit a medical professional or possibly \" + \"take a COVID-19 test.\";\nvar infoTextBot = \"Click the Button Below to Begin\";\nvar disclaimerTxt = \"The self-evaluation test is designed to give \" + \"advice to a user if they may need to go visit a doctor or get test \" + \"for COVID-19. Any results given are not certain facts that a user \" + \"may be sick/infected and should do further research or go see a \" + \"doctor if they have more concerns about their condition. Our goal \" + \"is giving users a source for additional advice on their next steps.\";\n\nvar TestStartScreen = function TestStartScreen(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.infoBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.infoText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, infoText), React.createElement(Text, {\n    style: styles.infoText1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, infoTextBot)), React.createElement(View, {\n    style: styles.formElement,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.backButton,\n    onPress: function onPress() {\n      return navigation.navigate('TestScreen');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 15,\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"Start Self Examination\"))), React.createElement(View, {\n    style: styles.disclaimerTextBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.disclaimerTitleText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Disclaimer:\"), React.createElement(Text, {\n    style: styles.disclaimerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, disclaimerTxt)));\n};\n\nexport default TestStartScreen;","map":{"version":3,"sources":["C:/Users/avalencia17/Documents/GitHub/CMPS4910-Senior-Project/contact-tracing-app/screens/testStartScreen.js"],"names":["React","useState","useEffect","styles","fetchTestData","FlatList","State","infoText","infoTextBot","disclaimerTxt","TestStartScreen","navigation","container","infoBox","infoText1","formElement","backButton","navigate","fontSize","color","disclaimerTextBox","disclaimerTitleText","disclaimerText"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP;;;;;AAOA,SAASC,aAAT;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,8BAAhC;AAIA,IAAIC,QAAQ,GAAG,kEACD,oEADC,GAED,uBAFd;AAIA,IAAIC,WAAW,GAAG,iCAAlB;AAEA,IAAIC,aAAa,GAAG,kDACN,qEADM,GAEN,oEAFM,GAGN,kEAHM,GAIN,oEAJM,GAKN,qEALd;;AAoBA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;AACtC,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACS,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACU,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACI,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BA,QAA/B,CADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACW,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCN,WAAhC,CAFJ,CADJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACY,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEZ,MAAM,CAACa,UAAhC;AACI,IAAA,OAAO,EAAE;AAAA,aAAML,UAAU,CAACM,QAAX,CAAoB,YAApB,CAAN;AAAA,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAE,EAAX;AAAeC,MAAAA,KAAK,EAAE;AAAtB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAHJ,CADJ,CALJ,EAYI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhB,MAAM,CAACiB,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjB,MAAM,CAACkB,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElB,MAAM,CAACmB,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKb,aADL,CAJJ,CAZJ,CADJ;AAyBH,CA1BD;;AA2BA,eAAeC,eAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styles from './styles/testStartScreen.style.js';\r\nimport {\r\n    Text,\r\n    View,\r\n    ActivityIndicator,\r\n    TouchableOpacity,\r\n} from 'react-native';\r\nimport { fetchTestData } from '../api/helpers';\r\nimport { FlatList, State } from 'react-native-gesture-handler';\r\n//Fetch Requests\r\n// Example code from: https://reactnative.dev/docs/network\r\n//Just testing fetching data from my Node server\r\nvar infoText = \"The following self-evaluation test will give you non-medical \"\r\n            + \"opinion if you should go visit a medical professional or possibly \"\r\n            + \"take a COVID-19 test.\";\r\n\r\nvar infoTextBot = \"Click the Button Below to Begin\";\r\n\r\nvar disclaimerTxt = \"The self-evaluation test is designed to give \"\r\n            + \"advice to a user if they may need to go visit a doctor or get test \"\r\n            + \"for COVID-19. Any results given are not certain facts that a user \"\r\n            + \"may be sick/infected and should do further research or go see a \"\r\n            + \"doctor if they have more concerns about their condition. Our goal \"\r\n            + \"is giving users a source for additional advice on their next steps.\";\r\n/*\r\nvar answer = \"\";\r\nconst adviceAnswer = (amount) => {\r\n    if (amount < 1) {\r\n        answer = \"You are clear.\";\r\n    }\r\n    else if (0 < amount && amount < 4) {\r\n        answer = \"You may want to go see a doctor or get a COVID-19 test.\"\r\n    }\r\n    else {\r\n        answer = \"You may want to go see a doctor or get a COVID-19 test.\"\r\n    }\r\n};\r\n*/\r\nconst TestStartScreen = ({navigation}) => {\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.infoBox}>\r\n                <Text style={styles.infoText}>{infoText}</Text>\r\n                <Text style={styles.infoText1}>{infoTextBot}</Text>\r\n            </View>\r\n            <View style={styles.formElement}>\r\n                <TouchableOpacity style={styles.backButton}\r\n                    onPress={() => navigation.navigate('TestScreen')}\r\n                >\r\n                    <Text style={{fontSize: 15, color: 'white'}}>Start Self Examination</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <View style={styles.disclaimerTextBox}>\r\n                <Text style={styles.disclaimerTitleText}>\r\n                    Disclaimer:\r\n                </Text>\r\n                <Text style={styles.disclaimerText}>\r\n                    {disclaimerTxt}\r\n                </Text>\r\n            </View>\r\n            \r\n        </View>\r\n    );\r\n\r\n}\r\nexport default TestStartScreen;"]},"metadata":{},"sourceType":"module"}