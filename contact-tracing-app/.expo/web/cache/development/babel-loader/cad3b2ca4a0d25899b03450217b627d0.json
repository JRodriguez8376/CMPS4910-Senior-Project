{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\avalencia17\\\\Documents\\\\GitHub\\\\CMPS4910-Senior-Project\\\\contact-tracing-app\\\\screens\\\\registerScreen.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport styles from \"./styles/registerScreen.style.js\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport AuthContext from \"../context/authContext\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\n\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      confirmEmail = _useState6[0],\n      setConfirmEmail = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      confirmPassword = _useState8[0],\n      setConfirmPassword = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      bday = _useState10[0],\n      setBday = _useState10[1];\n\n  var _React$useContext = React.useContext(AuthContext),\n      signUp = _React$useContext.signUp;\n\n  var validateField = function validateField(fieldOriginal, fieldValidate) {\n    if (fieldOriginal === fieldValidate) return true;else return false;\n  };\n\n  var submit = function submit() {\n    if (!validateField(email, confirmEmail)) {\n      Alert.alert(\"Mismatching fields\", \"Email fields do not match\", [{\n        text: \"Ok\"\n      }]);\n    } else if (!validateField(password, confirmPassword)) {\n      Alert.alert(\"Mismatching fields\", \"Password fields do not match\", [{\n        text: \"Ok\"\n      }]);\n    } else if (email.length == 0 || password == 0) {\n      Alert.alert(\"Missing fields\", \"Empty Fields\", [{\n        text: \"Ok\"\n      }]);\n    } else {\n      signUp({\n        email: email,\n        password: password\n      });\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, React.createElement(ImageBackground, {\n    source: require(\"../assets/images/login_img.jpg\"),\n    style: styles.backgroundImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.formContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"Covid Tracing App\"), React.createElement(Image, {\n    source: require(\"../assets/images/doge.jpg\"),\n    style: styles.logo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: styles.formElement,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.inputView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Email\",\n    placeholderTextColor: \"gray\",\n    value: email,\n    onChangeText: setEmail,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }))), React.createElement(View, {\n    style: styles.formElement,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.inputView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Password\",\n    placeholderTextColor: \"gray\",\n    secureTextEntry: true,\n    value: password,\n    onChangeText: setPassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }))), React.createElement(View, {\n    style: styles.formElement,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.inputView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Confirm Email\",\n    placeholderTextColor: \"gray\",\n    value: confirmEmail,\n    onChangeText: setConfirmEmail,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }))), React.createElement(View, {\n    style: styles.formElement,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.inputView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Confirm Password\",\n    placeholderTextColor: \"gray\",\n    secureTextEntry: true,\n    value: confirmPassword,\n    onChangeText: setConfirmPassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  }))), React.createElement(View, {\n    style: styles.formElement,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.signUpButton,\n    onPress: function onPress() {\n      return submit();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.signUpText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }, \"Sign Up\"))), React.createElement(View, {\n    style: styles.formElement,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.signInPageButton,\n    onPress: function onPress() {\n      return navigation.push(\"Login\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    numberOfLines: 1,\n    style: styles.signInPageText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  }, \"Already have an account? Sign In\"))))));\n};\n\nexport default RegisterScreen;","map":{"version":3,"sources":["C:/Users/avalencia17/Documents/GitHub/CMPS4910-Senior-Project/contact-tracing-app/screens/registerScreen.js"],"names":["React","useState","useEffect","styles","AuthContext","RegisterScreen","navigation","email","setEmail","password","setPassword","confirmEmail","setConfirmEmail","confirmPassword","setConfirmPassword","bday","setBday","useContext","signUp","validateField","fieldOriginal","fieldValidate","submit","Alert","alert","text","length","container","require","backgroundImage","formContainer","name","logo","formElement","inputView","input","signUpButton","signUpText","signInPageButton","push","signInPageText"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styles from './styles/registerScreen.style.js';\r\nimport {\r\n    Text,\r\n    View,\r\n    StyleSheet,\r\n    TextInput,\r\n    ImageBackground,\r\n    TouchableOpacity,\r\n    Image,\r\n    ActivityIndicator\r\n} from 'react-native';\r\n\r\n//import Virus from '../assets/images/virus.svg';\r\nimport AuthContext from '../context/authContext';\r\nimport { Alert } from 'react-native';\r\nconst RegisterScreen = ({navigation}) => {\r\n\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmEmail, setConfirmEmail] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [bday, setBday] = useState('');\r\n    const { signUp } = React.useContext(AuthContext);\r\n    const validateField = (fieldOriginal, fieldValidate) => {\r\n        if(fieldOriginal === fieldValidate) \r\n            return true;\r\n        else\r\n            return false\r\n    }\r\n    const submit = () => {\r\n        if(!validateField(email, confirmEmail)) {\r\n            Alert.alert(\r\n                \"Mismatching fields\",\r\n                \"Email fields do not match\",\r\n                [\r\n                    {\r\n                        text: \"Ok\"\r\n                    }\r\n                ]\r\n            );\r\n        } else if(!validateField(password, confirmPassword)) {\r\n            Alert.alert(\r\n                \"Mismatching fields\",\r\n                \"Password fields do not match\",\r\n                [\r\n                    {\r\n                        text: \"Ok\"\r\n                    }\r\n                ]\r\n            );\r\n        } else if(email.length == 0 || password == 0) {\r\n            Alert.alert(\r\n                \"Missing fields\",\r\n                \"Empty Fields\",\r\n                [\r\n                    {\r\n                        text: \"Ok\"\r\n                    }\r\n                ]\r\n            );\r\n        \r\n        } else {\r\n            signUp({ email, password});\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n            <ImageBackground source={require(\"../assets/images/login_img.jpg\")} style={styles.backgroundImage}>\r\n                <View style={styles.formContainer}>\r\n                    <Text style={styles.name}>Covid Tracing App</Text>\r\n                    <Image source={require(\"../assets/images/doge.jpg\")} style={styles.logo} />\r\n                    <View style={styles.formElement}>\r\n                        <View style={styles.inputView}>\r\n                            <TextInput style={styles.input}\r\n                                placeholder=\"Email\"\r\n                                placeholderTextColor='gray'\r\n                                value={email}\r\n                                onChangeText={setEmail}\r\n                            />\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.formElement}>\r\n                        <View style={styles.inputView}>\r\n                            <TextInput style={styles.input}\r\n                                placeholder=\"Password\"\r\n                                placeholderTextColor='gray'\r\n                                secureTextEntry={true}\r\n                                value={password}\r\n                                onChangeText={setPassword}\r\n                            />\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.formElement}>\r\n                        <View style={styles.inputView}>\r\n                            <TextInput style={styles.input}\r\n                                placeholder=\"Confirm Email\"\r\n                                placeholderTextColor='gray'\r\n                                value={confirmEmail}\r\n                                onChangeText={setConfirmEmail}\r\n                            />\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.formElement}>\r\n                        <View style={styles.inputView}>\r\n                            <TextInput style={styles.input}\r\n                                placeholder=\"Confirm Password\"\r\n                                placeholderTextColor='gray'\r\n                                secureTextEntry={true}\r\n                                value={confirmPassword}\r\n                                onChangeText={setConfirmPassword}\r\n                            />\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.formElement}>\r\n                        <TouchableOpacity style={styles.signUpButton}\r\n                            onPress={() => submit()}\r\n                        >\r\n                            <Text style={styles.signUpText}>Sign Up</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                    <View style={styles.formElement}>\r\n                        <TouchableOpacity style={styles.signInPageButton}\r\n                            onPress={() => navigation.push(\"Login\")}\r\n                        >\r\n                            <Text numberOfLines={1} style={styles.signInPageText}>Already have an account? Sign In</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </ImageBackground>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default RegisterScreen;"]},"metadata":{},"sourceType":"module"}