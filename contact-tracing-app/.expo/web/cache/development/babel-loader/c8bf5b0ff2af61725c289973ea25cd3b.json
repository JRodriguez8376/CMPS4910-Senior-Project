{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\avalencia17\\\\Documents\\\\GitHub\\\\CMPS4910-Senior-Project\\\\contact-tracing-app\\\\screens\\\\userInfoScreen.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport styles from \"./styles/testScreen.style.js\";\nimport { retrieveUnsecured } from \"../components/tokenAsync\";\nimport { getPostAPIData } from \"../api/helpers\";\n\nvar UserInfoTab = function UserInfoTab() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  useEffect(function () {\n    retrieveUnsecured('id').then(function (id) {\n      retrieveUnsecured('token').then(function (result) {\n        getPostAPIData('/api/user/user', {\n          \"id\": id\n        }, result).then(function (result) {\n          return setData(result);\n        }).then(function () {\n          return setLoading(false);\n        }).catch(function (error) {\n          console.error(error);\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }).catch(function (error) {\n      console.error(\"Error in promise object retrieveTokenAsync():::\", error);\n    });\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"User Info Placeholder\"), isLoading ? React.createElement(ActivityIndicator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 26\n    }\n  }) : React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"Device ID: \", data.device_id), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, \"User Type: \", data.user_type), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"Email: \", data.email), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, \"Password: \", data.passwrd)));\n};\n\nexport default UserInfoTab;","map":{"version":3,"sources":["C:/Users/avalencia17/Documents/GitHub/CMPS4910-Senior-Project/contact-tracing-app/screens/userInfoScreen.js"],"names":["React","useState","useEffect","styles","retrieveUnsecured","getPostAPIData","UserInfoTab","isLoading","setLoading","data","setData","then","id","result","catch","error","console","flex","justifyContent","alignItems","device_id","user_type","email","passwrd"],"mappings":";;;;;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAMA,OAAOC,MAAP;AACA,SAASC,iBAAT;AACA,SAASC,cAAT;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,kBACUL,QAAQ,CAAC,IAAD,CADlB;AAAA;AAAA,MACfM,SADe;AAAA,MACJC,UADI;;AAAA,mBAEEP,QAAQ,CAAC,EAAD,CAFV;AAAA;AAAA,MAEfQ,IAFe;AAAA,MAETC,OAFS;;AAItBR,EAAAA,SAAS,CAAC,YAAM;AAKZE,IAAAA,iBAAiB,CAAC,IAAD,CAAjB,CACKO,IADL,CACU,UAAAC,EAAE,EAAI;AACRR,MAAAA,iBAAiB,CAAC,OAAD,CAAjB,CACKO,IADL,CACU,UAAAE,MAAM,EAAI;AAIZR,QAAAA,cAAc,CAAC,gBAAD,EAAmB;AAAE,gBAAMO;AAAR,SAAnB,EAAiCC,MAAjC,CAAd,CAEKF,IAFL,CAEU,UAAAE,MAAM;AAAA,iBAAIH,OAAO,CAACG,MAAD,CAAX;AAAA,SAFhB,EAGKF,IAHL,CAGU;AAAA,iBAAMH,UAAU,CAAC,KAAD,CAAhB;AAAA,SAHV,EAIKM,KAJL,CAIW,UAAAC,KAAK,EAAI;AACZC,UAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH,SANL;AAOH,OAZL,EAaKD,KAbL,CAaW,UAAAC,KAAK,EAAI;AACZC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH,OAfL;AAgBH,KAlBL,EAmBKD,KAnBL,CAmBW,UAAAC,KAAK,EAAI;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAc,iDAAd,EAAiEA,KAAjE;AACH,KArBL;AAuBH,GA5BQ,EA4BN,EA5BM,CAAT;AA8BA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEE,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,cAAc,EAAE,QAA3B;AAAqCC,MAAAA,UAAU,EAAE;AAAjD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAIKZ,SAAS,GAAG,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GACN,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkBE,IAAI,CAACW,SAAvB,CAFJ,EAGI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkBX,IAAI,CAACY,SAAvB,CAHJ,EAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAcZ,IAAI,CAACa,KAAnB,CAJJ,EAKI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAiBb,IAAI,CAACc,OAAtB,CALJ,CALR,CADJ;AAkBH,CApDD;;AAsDA,eAAejB,WAAf","sourcesContent":["//Test screen for pulling data from API using authorized token\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n    Text,\r\n    View,\r\n    ActivityIndicator\r\n} from 'react-native';\r\nimport styles from './styles/testScreen.style.js';\r\nimport { retrieveUnsecured } from '../components/tokenAsync';\r\nimport { getPostAPIData } from '../api/helpers';\r\nconst UserInfoTab = () => {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        /*\r\n        Retrieve token id from storage, then auth token, then send POST request that\r\n        returns data asynchronously\r\n        */\r\n        retrieveUnsecured('id')\r\n            .then(id => {\r\n                retrieveUnsecured('token')\r\n                    .then(result => {\r\n                        //console.log(\"Retrieving: \", result);\r\n                        //console.log(\"id is\", id);\r\n                        //Send API request with ID and bearer token\r\n                        getPostAPIData('/api/user/user', { \"id\": id }, result)\r\n                            //If completed, setData to screen and take off loading screen\r\n                            .then(result => setData(result))\r\n                            .then(() => setLoading(false))\r\n                            .catch(error => {\r\n                                console.error(error);\r\n                            });\r\n                    })\r\n                    .catch(error => {\r\n                        console.error(error);\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error in promise object retrieveTokenAsync():::\", error);\r\n            });\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n            <Text >\r\n                User Info Placeholder\r\n            </Text>\r\n            {isLoading ? <ActivityIndicator /> : (\r\n                <View>\r\n\r\n                    <Text>Device ID: {data.device_id}</Text>\r\n                    <Text>User Type: {data.user_type}</Text>\r\n                    <Text>Email: {data.email}</Text>\r\n                    <Text>Password: {data.passwrd}</Text>\r\n                </View>\r\n\r\n            )}\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\nexport default UserInfoTab;"]},"metadata":{},"sourceType":"module"}