{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\avalencia17\\\\Documents\\\\GitHub\\\\CMPS4910-Senior-Project\\\\contact-tracing-app\\\\screens\\\\testResultsScreen.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport styles from \"./styles/testResultsScreen.style.js\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { fetchTestData } from \"../api/helpers\";\nimport { FlatList, State } from 'react-native-gesture-handler';\nvar disclaimerTxt = \"The self-evaluation test is designed to give \" + \"advice to a user if they may need to go visit a doctor or get test \" + \"for COVID-19. Any results given are not certain facts that a user \" + \"may be sick/infected and should do further research or go see a \" + \"doctor if they have more concerns about their condition. Our goal \" + \"is giving users a source for additional advice on their next steps.\";\nvar answer = \"\";\n\nvar adviceAnswer = function adviceAnswer(amount) {\n  if (amount < 1) {\n    answer = \"You are clear or did not answer enough questions.\";\n  } else if (0 < amount && amount < 4) {\n    answer = \"You may want to go see a doctor or get a COVID-19 test.\";\n  } else {\n    answer = \"Else, You may want to go see a doctor or get a COVID-19 test.\";\n  }\n};\n\nvar TestResultsScreen = function TestResultsScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var _route$params = route.params,\n      testSum = _route$params.testSum,\n      otherParam = _route$params.otherParam;\n  adviceAnswer(testSum);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.answerBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.answerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, answer)), React.createElement(View, {\n    style: styles.formElement,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.backButton,\n    onPress: function onPress() {\n      return navigation.navigate('TestStart');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 15,\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"Go Back to Main Screen\"))), React.createElement(View, {\n    style: styles.disclaimerTextBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.disclaimerTitleText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Disclaimer:\"), React.createElement(Text, {\n    style: styles.disclaimerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, disclaimerTxt)));\n};\n\nexport default TestResultsScreen;","map":{"version":3,"sources":["C:/Users/avalencia17/Documents/GitHub/CMPS4910-Senior-Project/contact-tracing-app/screens/testResultsScreen.js"],"names":["React","useState","useEffect","styles","fetchTestData","FlatList","State","disclaimerTxt","answer","adviceAnswer","amount","TestResultsScreen","route","navigation","params","testSum","otherParam","container","answerBox","answerText","formElement","backButton","navigate","fontSize","color","disclaimerTextBox","disclaimerTitleText","disclaimerText"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP;;;;;AAOA,SAASC,aAAT;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,8BAAhC;AAKA,IAAIC,aAAa,GAAG,kDACN,qEADM,GAEN,oEAFM,GAGN,kEAHM,GAIN,oEAJM,GAKN,qEALd;AAOA,IAAIC,MAAM,GAAG,EAAb;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAAY;AAC7B,MAAIA,MAAM,GAAG,CAAb,EAAgB;AACZF,IAAAA,MAAM,GAAG,mDAAT;AACH,GAFD,MAGK,IAAI,IAAIE,MAAJ,IAAcA,MAAM,GAAG,CAA3B,EAA8B;AAC/BF,IAAAA,MAAM,GAAG,yDAAT;AACH,GAFI,MAGA;AACDA,IAAAA,MAAM,GAAG,+DAAT;AACH;AACJ,CAVD;;AAYA,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,OAAyB;AAAA,MAAvBC,KAAuB,QAAvBA,KAAuB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;AAAA,sBACfD,KAAK,CAACE,MADS;AAAA,MACvCC,OADuC,iBACvCA,OADuC;AAAA,MAC9BC,UAD8B,iBAC9BA,UAD8B;AAG/CP,EAAAA,YAAY,CAACM,OAAD,CAAZ;AACA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,MAAM,CAACc,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEd,MAAM,CAACe,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEf,MAAM,CAACgB,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCX,MAAjC,CADJ,CAPJ,EAUI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACiB,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEjB,MAAM,CAACkB,UAAhC;AACI,IAAA,OAAO,EAAE;AAAA,aAAMR,UAAU,CAACS,QAAX,CAAoB,WAApB,CAAN;AAAA,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAE,EAAX;AAAeC,MAAAA,KAAK,EAAE;AAAtB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAHJ,CADJ,CAVJ,EAmBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErB,MAAM,CAACsB,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEtB,MAAM,CAACuB,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvB,MAAM,CAACwB,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKpB,aADL,CAJJ,CAnBJ,CADJ;AAgCH,CApCD;;AAqCA,eAAeI,iBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styles from './styles/testResultsScreen.style.js';\r\nimport {\r\n    Text,\r\n    View,\r\n    ActivityIndicator,\r\n    TouchableOpacity,\r\n} from 'react-native';\r\nimport { fetchTestData } from '../api/helpers';\r\nimport { FlatList, State } from 'react-native-gesture-handler';\r\n//Fetch Requests\r\n// Example code from: https://reactnative.dev/docs/network\r\n//Just testing fetching data from my Node server\r\n\r\nvar disclaimerTxt = \"The self-evaluation test is designed to give \"\r\n            + \"advice to a user if they may need to go visit a doctor or get test \"\r\n            + \"for COVID-19. Any results given are not certain facts that a user \"\r\n            + \"may be sick/infected and should do further research or go see a \"\r\n            + \"doctor if they have more concerns about their condition. Our goal \"\r\n            + \"is giving users a source for additional advice on their next steps.\";\r\n\r\nvar answer = \"\";\r\nconst adviceAnswer = (amount) => {\r\n    if (amount < 1) {\r\n        answer = \"You are clear or did not answer enough questions.\";\r\n    }\r\n    else if (0 < amount && amount < 4) {\r\n        answer = \"You may want to go see a doctor or get a COVID-19 test.\"\r\n    }\r\n    else {\r\n        answer = \"Else, You may want to go see a doctor or get a COVID-19 test.\"\r\n    }\r\n};\r\n\r\nconst TestResultsScreen = ({route, navigation}) => {\r\n    const { testSum, otherParam } = route.params;\r\n\r\n    adviceAnswer(testSum);\r\n    return (\r\n        <View style={styles.container}>\r\n            {/*<View style={{justifyContent: 'flex-end', alignItems: 'center', backgroundColor: '#FF0000', width: '100%', height: 25}}>\r\n                <Text >\r\n                    Test Placeholder\r\n                </Text>\r\n            </View>*/}\r\n\r\n            <View style={styles.answerBox}>\r\n                <Text style={styles.answerText}>{answer}</Text>\r\n            </View>\r\n            <View style={styles.formElement}>\r\n                <TouchableOpacity style={styles.backButton}\r\n                    onPress={() => navigation.navigate('TestStart')}\r\n                >\r\n                    <Text style={{fontSize: 15, color: 'white'}}>Go Back to Main Screen</Text>\r\n                </TouchableOpacity>\r\n                {/*Debug<Text style={{color: 'blue', fontSize: 16, fontWeight: 'bold'}}>Hi: {testSum}</Text>\r\n                <Text style={{color: 'blue', fontSize: 16, fontWeight: 'bold'}}>Hi: {answer}</Text>*/}\r\n            </View>\r\n            <View style={styles.disclaimerTextBox}>\r\n                <Text style={styles.disclaimerTitleText}>\r\n                    Disclaimer:\r\n                </Text>\r\n                <Text style={styles.disclaimerText}>\r\n                    {disclaimerTxt}\r\n                </Text>\r\n            </View>\r\n            \r\n        </View>\r\n    );\r\n\r\n}\r\nexport default TestResultsScreen;"]},"metadata":{},"sourceType":"module"}