{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\Documents\\\\GitHub\\\\CMPS4910-Senior-Project\\\\contact-tracing-app\\\\navigation\\\\stackNavigator.js\";\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport SignedInNavigator from \"./tabNavigator\";\nimport LoginScreen from \"../screens/loginScreen\";\nimport LoadingScreen from \"../screens/loadingScreen\";\nimport reducer from \"../hooks/reducer\";\nvar Stack = createStackNavigator();\n\nvar Navigation = function Navigation() {\n  React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, state.isLoading ? React.createElement(Stack.Screen, {\n    name: \"LoadingScreen\",\n    component: LoadingScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  }) : state.userToken == null ? React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: LoginScreen,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }) : React.createElement(Stack.Screen, {\n    name: \"SignedIn\",\n    component: SignedInNavigator,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 29\n    }\n  })));\n};\n\nexport default Navigation;","map":{"version":3,"sources":["D:/Documents/GitHub/CMPS4910-Senior-Project/contact-tracing-app/navigation/stackNavigator.js"],"names":["NavigationContainer","createStackNavigator","SignedInNavigator","LoginScreen","LoadingScreen","reducer","Stack","Navigation","state","isLoading","userToken","headerShown"],"mappings":";;;AAGA,SAASA,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,iBAAP;AAEA,OAAOC,WAAP;AACA,OAAOC,aAAP;AACA,OAAOC,OAAP;AAEA,IAAMC,KAAK,GAAGL,oBAAoB,EAAlC;;AACA,IAAMM,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,sBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQC,KAAK,CAACC,SAAN,GACI,oBAAC,KAAD,CAAO,MAAP;AACI,IAAA,IAAI,EAAC,eADT;AAEI,IAAA,SAAS,EAAEL,aAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,GAKII,KAAK,CAACE,SAAN,IAAmB,IAAnB,GAEA,oBAAC,KAAD,CAAO,MAAP;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,SAAS,EAAEP,WAFf;AAGI,IAAA,OAAO,EAAE;AACLQ,MAAAA,WAAW,EAAE;AADR,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,GAUQ,oBAAC,KAAD,CAAO,MAAP;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,SAAS,EAAET,iBAFf;AAGI,IAAA,OAAO,EAAE;AACLS,MAAAA,WAAW,EAAE;AADR,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBpB,CADJ;AA6BH,CA9BD;;AAiCA,eAAeJ,UAAf","sourcesContent":["\r\n\r\n\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport SignedInNavigator from './tabNavigator';\r\n\r\nimport LoginScreen from '../screens/loginScreen';\r\nimport LoadingScreen from '../screens/loadingScreen';\r\nimport reducer from \"../hooks/reducer\";\r\n\r\nconst Stack = createStackNavigator();\r\nconst Navigation = () => {\r\n    <NavigationContainer>\r\n        <Stack.Navigator>\r\n            {\r\n                state.isLoading ? (\r\n                    <Stack.Screen\r\n                        name=\"LoadingScreen\"\r\n                        component={LoadingScreen}\r\n                    />\r\n                ) : state.userToken == null ? (\r\n                    // No authenticated token\r\n                    <Stack.Screen\r\n                        name=\"Login\"\r\n                        component={LoginScreen}\r\n                        options={{\r\n                            headerShown: false\r\n                        }}\r\n                    />\r\n                ) : (\r\n                            <Stack.Screen\r\n                                name=\"SignedIn\"\r\n                                component={SignedInNavigator}\r\n                                options={{\r\n                                    headerShown: false\r\n                                }}\r\n                            />\r\n                        )\r\n            }\r\n        </Stack.Navigator>\r\n    </NavigationContainer>\r\n}\r\n\r\n\r\nexport default Navigation;"]},"metadata":{},"sourceType":"module"}