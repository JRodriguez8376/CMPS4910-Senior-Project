{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avalencia17\\\\Documents\\\\GitHub\\\\CMPS4910-Senior-Project\\\\contact-tracing-app\\\\screens\\\\testScreen.js\",\n    _this = this;\n\nimport React, { useState, useEffect } from 'react';\nimport styles from \"./styles/testScreen.style.js\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport RadioForm, { RadioButton, RadioButtonInput, RadioButtonLabel } from 'react-native-simple-radio-button';\nimport { fetchTestData } from \"../api/helpers\";\nimport { FlatList, State } from 'react-native-gesture-handler';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nvar myIcon = React.createElement(Icon, {\n  name: \"rocket\",\n  size: 30,\n  color: \"#900\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 16\n  }\n});\nvar QuestionData = [{\n  id: 1,\n  num: 1,\n  title: \"This is question 1?\"\n}, {\n  id: 2,\n  num: 2,\n  title: \"This is question 2?\"\n}, {\n  id: 3,\n  num: 3,\n  title: \"This is question 3?\"\n}, {\n  id: 4,\n  num: 4,\n  title: \"This is question 4?\"\n}, {\n  id: 5,\n  num: 5,\n  title: \"This is question 5?\"\n}, {\n  id: 6,\n  num: 6,\n  title: \"This is question 6?\"\n}];\nvar yesArr = [0, 0, 0, 0, 0, 0];\nvar SampleArr = [\"Q1: .....\", \"Q2: .....\", \"Q3: .....\"];\nvar counter = 0;\nvar globalVar = {\n  counter: counter\n};\n\nvar sumArr = function sumArr() {\n  counter = yesArr.reduce(function (a, b) {\n    return a + b;\n  }, 0);\n  return counter;\n};\n\nvar resetArr = function resetArr() {\n  for (var i = 0; i < yesArr.length; i++) {\n    yesArr[i] = 0;\n  }\n};\n\nvar setCounter = function setCounter(index, amount) {\n  var num = Object.values(index);\n  yesArr[num - 1] = amount;\n};\n\nvar radio_props = [{\n  label: 'Yes',\n  value: 1\n}, {\n  label: 'No',\n  value: 0\n}];\n\nvar Item = function Item(_ref) {\n  var title = _ref.title,\n      num = _ref.num;\n  return React.createElement(View, {\n    style: styles.items,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      position: 'absolute',\n      left: 10,\n      top: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon, {\n    name: \"question-circle-o\",\n    size: 30,\n    color: \"#F00\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  })), React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"Question \", title, \" \"), React.createElement(RadioForm, {\n    formHorizontal: true,\n    labelHorizontal: true,\n    buttonColor: '#FF0000',\n    animation: true,\n    radio_props: radio_props,\n    initial: -1,\n    onPress: function onPress(value) {\n      return setCounter({\n        num: num\n      }, value);\n    },\n    buttonSize: 12,\n    isSelected: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar renderItem = function renderItem(_ref2) {\n  var item = _ref2.item;\n  return React.createElement(Item, {\n    title: item.title,\n    num: item.num,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  });\n};\n\nvar TestScreen = function TestScreen(_ref3) {\n  var navigation = _ref3.navigation;\n  resetArr();\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.questionCard,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    data: QuestionData,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    ListFooterComponent: React.createElement(View, {\n      style: styles.showResults,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: styles.resultsButton,\n      onPress: function onPress() {\n        navigation.navigate('TestResults', {\n          testSum: sumArr(),\n          otherParam: 'anything you want here'\n        });\n        resetArr();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 16,\n        color: 'white'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 33\n      }\n    }, \"Show Results\"))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default TestScreen;","map":{"version":3,"sources":["C:/Users/avalencia17/Documents/GitHub/CMPS4910-Senior-Project/contact-tracing-app/screens/testScreen.js"],"names":["React","useState","useEffect","styles","RadioForm","RadioButton","RadioButtonInput","RadioButtonLabel","fetchTestData","FlatList","State","Icon","myIcon","QuestionData","id","num","title","yesArr","SampleArr","counter","globalVar","sumArr","reduce","a","b","resetArr","i","length","setCounter","index","amount","Object","values","radio_props","label","value","Item","items","position","left","top","renderItem","item","TestScreen","navigation","container","questionCard","toString","showResults","resultsButton","navigate","testSum","otherParam","fontSize","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styles from './styles/testScreen.style.js';\r\nimport {\r\n    SafeAreaView,\r\n    Text,\r\n    View,\r\n    ActivityIndicator,\r\n    TouchableOpacity,\r\n} from 'react-native';\r\nimport RadioForm, {RadioButton, RadioButtonInput, RadioButtonLabel} from 'react-native-simple-radio-button';\r\n//import { RadioButton } from 'react-native-paper';\r\nimport { fetchTestData } from '../api/helpers';\r\nimport { FlatList, State } from 'react-native-gesture-handler';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\n//import TestScreen from '../screens/loginScreen';\r\n\r\nconst myIcon = <Icon name=\"rocket\" size={30} color=\"#900\" />;\r\n\r\n//Fetch Requests\r\n// Example code from: https://reactnative.dev/docs/network\r\n//Just testing fetching data from my Node server\r\n\r\nconst QuestionData = [ \r\n    {\r\n        id: 1,\r\n        num: 1,\r\n        title: \"This is question 1?\",\r\n    },\r\n    {\r\n        id: 2,\r\n        num: 2,\r\n        title: \"This is question 2?\",\r\n    },\r\n    {\r\n        id: 3,\r\n        num: 3,\r\n        title: \"This is question 3?\",\r\n    },\r\n    {\r\n        id: 4,\r\n        num: 4,\r\n        title: \"This is question 4?\",\r\n    },\r\n    {\r\n        id: 5,\r\n        num: 5,\r\n        title: \"This is question 5?\",\r\n    },\r\n    {\r\n        id: 6,\r\n        num: 6,\r\n        title: \"This is question 6?\",\r\n    },\r\n];\r\nvar yesArr = [0, 0, 0, 0, 0, 0];\r\n\r\n\r\nconst SampleArr = [\r\n    \"Q1: .....\",\r\n    \"Q2: .....\",\r\n    \"Q3: .....\",\r\n];\r\n\r\nlet counter = 0;\r\nconst globalVar = {\r\n    counter\r\n};\r\nconst sumArr = () => {\r\n    counter = yesArr.reduce((a,b) => a + b, 0)\r\n    //console.log(yesArr);\r\n    //console.log(\"sumArr(): counter: %d\", counter);\r\n    return counter;\r\n};\r\nconst resetArr = () => {\r\n    for (var i = 0; i < yesArr.length; i++) {\r\n        yesArr[i] = 0;\r\n    }\r\n};\r\nconst setCounter = (index, amount) => {\r\n    let num = Object.values(index);\r\n    yesArr[num-1] = amount;\r\n    //console.log(amount);\r\n    //console.log(index);\r\n    //console.log(num);\r\n    //console.log(yesArr);\r\n};\r\n\r\nvar radio_props = [\r\n    {label: 'Yes', value: 1 },\r\n    {label: 'No', value: 0 }\r\n];\r\n\r\nconst Item = ({ title, num }) => (\r\n    <View style={styles.items}>\r\n        <View style={{position: 'absolute', left: 10, top: 10,}}>\r\n            <Icon name=\"question-circle-o\" size={30} color=\"#F00\" /> \r\n        </View>\r\n        <Text style={styles.title}>Question {title} </Text>\r\n        <RadioForm\r\n            formHorizontal={true}\r\n            labelHorizontal={true}\r\n            buttonColor={'#FF0000'}\r\n            animation={true}\r\n            radio_props={radio_props}\r\n            initial={-1}\r\n            onPress={(value) => setCounter({num}, value)}\r\n            buttonSize={12}\r\n            isSelected={true}\r\n        />\r\n    </View>\r\n\r\n);\r\n\r\nconst renderItem = ({ item }) => (\r\n    <Item title={item.title} \r\n        num={item.num}\r\n    />\r\n\r\n);\r\n\r\n//onPress={() => setSum(sumArr())}\r\nconst TestScreen = ({navigation}) => {\r\n    //const [isLoading, setLoading] = useState(true);\r\n    //const [data, setData] = useState([]);\r\n    //const [sum, setSum] = useState(0);\r\n    resetArr();\r\n    return (\r\n        <View style={styles.container}>\r\n            {/*<View style={{justifyContent: 'flex-end', alignItems: 'center', backgroundColor: '#FF0000', width: '100%', height: 25}}>\r\n                \r\n            </View>*/}\r\n            <View style={styles.questionCard}>\r\n                <FlatList\r\n                    data={QuestionData}\r\n                    renderItem={renderItem}\r\n                    keyExtractor={item => item.id.toString()}\r\n                    ListFooterComponent={\r\n                        <View style={styles.showResults}>\r\n                            <TouchableOpacity style={styles.resultsButton}\r\n                                onPress={() => {\r\n                                    navigation.navigate('TestResults', {\r\n                                    testSum: sumArr(),\r\n                                    otherParam: 'anything you want here',\r\n                                    });\r\n                                    resetArr();\r\n                                }}\r\n                            >\r\n                                <Text style={{fontSize: 16, color: 'white'}}>Show Results</Text>\r\n                            </TouchableOpacity>\r\n                            {/*Debug<Text style={{fontSize: 15, fontWeight: 'bold'}}>{sum}</Text>*/}\r\n                        </View>\r\n                    }\r\n                />\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n\r\n}\r\nexport default TestScreen;"]},"metadata":{},"sourceType":"module"}